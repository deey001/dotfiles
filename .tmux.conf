unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %
bind -n F5 setw synchronize-panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n S-Right next
bind -n S-Left prev
bind -n S-Up new-window
bind -n S-Down new-window
bind -n C-M-Left resize-pane -L 1
bind -n C-M-Right resize-pane -R 1
bind -n C-M-Up resize-pane -U 1
bind -n C-M-Down resize-pane -D 1
set -g mouse on
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none
set -sg escape-time 10
set-option -g focus-events on
setw -g mode-keys vi
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on
set -g default-terminal "screen-256color"
set-option -g default-shell /usr/bin/fish
set -g history-limit 1000000
set -g aggressive-resize on
set -g detach-on-destroy off

# Smart Pane Switching (Vim-aware)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -r h if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -r j if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -r k if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -r l if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

# Fuzzy Session Switching (requires fzf)
bind f new-window -n "session-switcher" "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Copy Mode and Clipboard (Cross-Platform)
bind -T copy-mode-vi v send-keys -X begin-selection
if-shell "uname | grep -q Darwin" "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'"
if-shell "uname | grep -q Linux && command -v wl-copy" "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'wl-copy'"
if-shell "uname | grep -q Linux && command -v xclip" "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"
set -g set-clipboard on

# Status Bar
set -g status-position bottom
set -g status-left-length 70
set -g status-left "#[fg=colour26]local:#(ip route get 1.2.3.4 | cut -d ' ' -f 7) #[fg=colour81]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn:\" $2}') #(ifconfig ppp0 | grep 'inet ' | awk '{print \"vpn \" $2}')#[fg=colour105]wan:#(curl ifconfig.me)"
set -g status-right-length 60
set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %b %d %Y #[fg=green]:: %l:%M %p ::"
set -ag status-right " | #[fg=cyan]#(git -C #{pane_current_path} rev-parse --abbrev-ref HEAD 2>/dev/null)"
if-shell "uname | grep -q Linux" "set -ag status-right ' | #(cat /proc/loadavg | cut -d ' ' -f1-3)'"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'dracula/tmux'
set -g @dracula-show-left-icon " "
set -g @dracula-show-fahrenheit false
set -g @dracula-show-location false
set -g @dracula-show-powerline true
set -g @dracula-show-flags false
set -g @dracula-show-empty-plugins false
set -g @dracula-plugins "battery git weather time"
set -g @dracula-time-format "%d%b %R"
set -g @dracula-ping-server "8.8.8.8"
set -g @dracula-cpu-display-load true
set -g @dracula-ping-rate 5
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-thumbs'

set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '5'

run '~/.tmux/plugins/tpm/tpm'
